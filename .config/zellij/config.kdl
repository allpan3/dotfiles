// If you'd like to override the default keybindings completely, be sure to change "keybinds" to "keybinds clear-defaults=true"
keybinds clear-defaults=true {

  // tmux mode is the command mode, activated by leader key (Ctrl Space)
  tmux {
    bind "Ctrl space" { Write 2; SwitchToMode "normal"; }
    bind "s" { SwitchToMode "scroll"; }
    bind "w" { SwitchToMode "pane"; }
    bind "t" { SwitchToMode "tab"; }
    bind "r" { SwitchToMode "resize"; }
    bind "q" { SwitchToMode "session"; }
    bind "v" { SwitchToMode "move"; }

    // panes
    // bind "Shift d" { NewPane "down"; SwitchToMode "normal"; }
    // bind "d" { NewPane "right"; SwitchToMode "normal"; }
    // bind "h" { MoveFocusOrTab "left"; SwitchToMode "normal"; }
    // bind "l" { MoveFocusOrTab "right"; SwitchToMode "normal"; }
    // bind "j" { MoveFocus "down"; SwitchToMode "normal"; }
    // bind "k" { MoveFocus "up"; SwitchToMode "normal"; }
    bind "n" { NewPane; SwitchToMode "normal"; }
    bind "p" { TogglePaneFrames; SwitchToMode "normal"; }
    bind "m" { ToggleFocusFullscreen; SwitchToMode "normal"; } // zoom
    bind "f" { ToggleFloatingPanes; SwitchToMode "normal"; }
    bind "c" { Clear; SwitchToMode "normal";}
    bind "]" { NextSwapLayout; }
    bind "[" { PreviousSwapLayout; }

    // tabs
    bind "tab" { ToggleTab; SwitchToMode "normal"; }
    bind "h" { GoToPreviousTab; SwitchToMode "normal"; }
    bind "l" { GoToNextTab; SwitchToMode "normal"; }
    bind "1" { GoToTab 1; SwitchToMode "normal"; }
    bind "2" { GoToTab 2; SwitchToMode "normal"; }
    bind "3" { GoToTab 3; SwitchToMode "normal"; }
    bind "4" { GoToTab 4; SwitchToMode "normal"; }
    bind "5" { GoToTab 5; SwitchToMode "normal"; }
    bind "6" { GoToTab 6; SwitchToMode "normal"; }
    bind "7" { GoToTab 7; SwitchToMode "normal"; }
    bind "8" { GoToTab 8; SwitchToMode "normal"; }
    bind "9" { GoToTab 9; SwitchToMode "normal"; }

    // scroll
    bind "Ctrl d" { HalfPageScrollDown; }
    bind "Ctrl u" { HalfPageScrollUp; }
    bind "Ctrl f" "PageDown" { PageScrollDown; }
    bind "Ctrl b" "PageUp" { PageScrollUp; }

    // search
    bind "/" { SwitchToMode "entersearch"; SearchInput 0; }

    // resize
    bind "=" "+" { Resize "Increase"; }
    bind "-" { Resize "Decrease"; }

  }
  normal {
    // uncomment this and adjust key if using copy_on_select=false
    // bind "Alt c" { Copy; }
  }
  locked {
    bind "Alt z" { SwitchToMode "Normal"; }
  }
  shared {
  }
  // Keybindings directly accessible without leader key
  shared_except "tmux" {
    bind "Ctrl Space" { SwitchToMode "tmux"; } // leader go to tmux mode from any mode
    bind "Alt =" "Alt +" { Resize "Increase"; }
    bind "Alt -" { Resize "Decrease"; }
    bind "Alt h" { GoToPreviousTab; }
    bind "Alt l" { GoToNextTab; }
    bind "Alt 1" { GoToTab 1; }
    bind "Alt 2" { GoToTab 2; }
    bind "Alt 3" { GoToTab 3; }
    bind "Alt 4" { GoToTab 4; }
    bind "Alt 5" { GoToTab 5; }
    bind "Alt 6" { GoToTab 6; }
    bind "Alt 7" { GoToTab 7; }
    bind "Alt 8" { GoToTab 8; }
    bind "Alt 9" { GoToTab 9; }
  }
  // These are the keybindings I want to pass to apps and let them handle
  shared_except "locked" {
    bind "Alt z" { SwitchToMode "Locked"; }
    bind "Alt p" { TogglePaneInGroup; }
    bind "Alt Shift p" { ToggleGroupMarking; }

    bind "Ctrl h" {
        MessagePlugin "file:~/.config/zellij/plugins/vim-zellij-navigator.wasm" {
            name "move_focus_or_tab";
            payload "left";

            // Plugin Configuration
            move_mod "ctrl"; // Optional, should be added on every move command if changed.
            use_arrow_keys "false"; // Optional, uses arrow keys instead of hjkl. Should be added to every command where you want to use it.
        };
    }

    bind "Ctrl j" {
        MessagePlugin "file:~/.config/zellij/plugins/vim-zellij-navigator.wasm" {
            name "move_focus";
            payload "down";

            move_mod "ctrl";
            use_arrow_keys "false";
        };
    }

    bind "Ctrl k" {
        MessagePlugin "file:~/.config/zellij/plugins/vim-zellij-navigator.wasm" {
            name "move_focus";
            payload "up";

            move_mod "ctrl";
            use_arrow_keys "false";
        };
    }

    bind "Ctrl l" {
        MessagePlugin "file:~/.config/zellij/plugins/vim-zellij-navigator.wasm" {
            name "move_focus_or_tab";
            payload "right";

            move_mod "ctrl"; // Optional, should be added on every command if you want to use it
            use_arrow_keys "false";
        };
    }
}

  // In tmux and all action modes, esc or enter to switch back to normal mode
  shared_except "normal" "locked" "entersearch" "renamepane" "search" "renametab" {
    bind "esc" "enter" { SwitchToMode "normal"; } 
  }
  pane {
    bind "left" { MoveFocus "left"; }
    bind "right" { MoveFocus "right"; }
    bind "down" { MoveFocus "down"; }
    bind "up" { MoveFocus "up"; }
    bind "w" { NewPane; SwitchToMode "normal"; }
    bind "h" { NewPane "down"; SwitchToMode "normal"; }
    bind "v" { NewPane "right"; SwitchToMode "normal"; }
    bind "s" { NewPane "stacked"; SwitchToMode "Normal"; }
    bind "d" { CloseFocus; SwitchToMode "normal"; }
    bind "m" { ToggleFocusFullscreen; SwitchToMode "normal"; }
    bind "f" { ToggleFloatingPanes; SwitchToMode "normal"; }
    bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "normal"; }
    bind "r" { SwitchToMode "renamepane"; PaneNameInput 0;}
    bind "p" { TogglePanePinned; SwitchToMode "normal"; }
    bind "tab" { SwitchFocus; }
  }
  move {
    bind "n" { MovePane; } // move pane forward
    bind "p" { MovePaneBackwards; }
    bind "h" "left" { MovePane "left"; }
    bind "j" "down" { MovePane "down"; }
    bind "k" "up" { MovePane "up"; }
    bind "l" "right" { MovePane "right"; }
    bind "]" { BreakPaneRight;}  // move a pane to a different tab (if it's a tab, converted to a pane)
    bind "[" { BreakPaneLeft;}
    bind "b" { BreakPane; SwitchToMode "normal"; }  // convert a pane to a tab
    bind "{" { MoveTab "left"; }
    bind "}" { MoveTab "right"; }
  } 
  resize {
    bind "h" "left" { Resize "Increase left"; }
    bind "j" "down" { Resize "Increase down"; }
    bind "k" "up" { Resize "Increase up"; }
    bind "l" "right" { Resize "Increase right"; }
    bind "H" { Resize "Decrease left"; }
    bind "J" { Resize "Decrease down"; }
    bind "K" { Resize "Decrease up"; }
    bind "L" { Resize "Decrease right"; }
    bind "=" "+" { Resize "Increase"; }
    bind "-" { Resize "Decrease"; }
  }
  tab {
    bind "t" { NewTab; SwitchToMode "normal"; }
    bind "r" { SwitchToMode "renametab"; TabNameInput 0; }
    bind "h" "left" "up" "k" { GoToPreviousTab; }
    bind "l" "right" "down" "j" { GoToNextTab; }
    bind "d" { CloseTab; SwitchToMode "normal"; }
    bind "s" { ToggleActiveSyncTab; SwitchToMode "normal"; }
  }
  shared_among "scroll" "search" {
    bind "Ctrl c" { ScrollToBottom; SwitchToMode "normal"; } // cancel
    bind "j" "down" { ScrollDown; }
    bind "k" "up" { ScrollUp; }
    bind "g" { ScrollToTop; }
    bind "G" { ScrollToBottom; }
    bind "d" { HalfPageScrollDown; }
    bind "u" { HalfPageScrollUp; }
    bind "f" "right" { PageScrollDown; }
    bind "b" "left" { PageScrollUp; }
  }
  scroll {
    bind "e" { EditScrollback; SwitchToMode "normal"; }
    bind "s" { SwitchToMode "entersearch"; SearchInput 0; }
  }
  search {
    bind "esc" { SwitchToMode "normal"; }
    bind "n" { Search "up"; }    // makes more sense since first highlighted result is always at the bottom
    bind "p" "N" { Search "down"; }
    bind "c" { SearchToggleOption "CaseSensitivity"; }
    bind "w" { SearchToggleOption "Wrap"; }
    bind "o" { SearchToggleOption "WholeWord"; }
  }
  entersearch {
    bind "Ctrl c" { SwitchToMode "normal"; }
    bind "esc"    { SwitchToMode "scroll"; }
    bind "enter" { SwitchToMode "search"; }
  }
  renametab {
    bind "Ctrl c" { UndoRenameTab; SwitchToMode "normal"; }
    bind "esc" { UndoRenameTab; SwitchToMode "tab"; }
    bind "enter" { SwitchToMode "normal"; } // confirm
  }
  renamepane {
    bind "Ctrl c" { UndoRenamePane; SwitchToMode "normal"; }
    bind "esc" { UndoRenamePane; SwitchToMode "pane"; }
    bind "enter" { SwitchToMode "normal"; } // confirm
  }
  session {
    bind "q" { Detach; }
    bind "d" { Quit; }    // basically "delete session"
    bind "w" {
      LaunchOrFocusPlugin "session-manager" {
        floating true
        move_to_focused_tab true
      };
      SwitchToMode "normal"
    }
    bind "c" {
      LaunchOrFocusPlugin "configuration" {
        floating true
        move_to_focused_tab true
      }
      SwitchToMode "normal"
    }
    bind "p" {
      LaunchOrFocusPlugin "plugin-manager" {
        floating true
        move_to_focused_tab true
      }
      SwitchToMode "normal"
    }
    bind "a" {
      LaunchOrFocusPlugin "zellij:about" {
        floating true
        move_to_focused_tab true
      };
      SwitchToMode "normal"
    }
    bind "s" {
        LaunchOrFocusPlugin "zellij:share" {
            floating true
            move_to_focused_tab true
        };
        SwitchToMode "normal"
    }
  }
}

// Plugin aliases - can be used to change the implementation of Zellij
// changing these requires a restart to take effect
plugins {
    about location="zellij:about"
    compact-bar location="zellij:compact-bar"
    configuration location="zellij:configuration"
    filepicker location="zellij:strider" {
        cwd "/"
    }
    plugin-manager location="zellij:plugin-manager"
    session-manager location="zellij:session-manager"
    status-bar location="zellij:status-bar"
    strider location="zellij:strider"
    tab-bar location="zellij:tab-bar"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
}

// Plugins to load in the background when a new session starts
// eg. "file:/path/to/my-plugin.wasm"
// eg. "https://example.com/my-plugin.wasm"
load_plugins {
}


// Use a simplified UI without special fonts (arrow glyphs)
// Options:
//   - true
//   - false (Default)
// 
// simplified_ui true
 
// Choose the theme that is specified in the themes section.
// Default: default
// 
theme "catppuccin-mocha"

// Choose the base input mode of zellij.
// Default: normal
// 
// default_mode "locked"
 
// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
// 
// default_shell "fish"
 
// Choose the path to override cwd that zellij will use for opening new panes
//
// default_cwd ""
 
// The name of the default layout to load on startup
// Default: "default"
// (Requires restart)
// 
default_layout "zjstatus"
 
// The folder in which Zellij will look for layouts
// (Requires restart)
// 
// layout_dir "/tmp"
 
// The folder in which Zellij will look for themes
// (Requires restart)
// 
// theme_dir "/tmp"
 
// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// (Requires restart)
// Options:
//   - true (default)
//   - false
// mouse_mode false
 
// Toggle between having pane frames around the panes
// Options:
//   - true (default)
//   - false
//
// pane_frames false
 
// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
// 
// mirror_session true
 
// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
// 
// on_force_close "quit"
 
// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
// 
// scroll_buffer_size 10000
 
// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx
// 
// copy_command "pbcopy"
 
// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
// 
// copy_clipboard "primary"
 
// Enable or disable automatic copy (and clear) of selection when releasing mouse
// Default: true
// 
// copy_on_select false
 
// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
//
// scrollback_editor "/usr/bin/vim"
 
// A fixed name to always give the Zellij session.
// Consider also setting `attach_to_session true,`
// otherwise this will error if such a session exists.
// Default: <RANDOM>
// 
// session_name "My singleton session"
 
// When `session_name` is provided, attaches to that session
// if it is already running or creates it otherwise.
// Default: false
// 
// attach_to_session true
 
// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
// 
// auto_layout false
 
// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// (Requires restart)
// Options:
//   - true (default)
//   - false
 
// Whether pane viewports are serialized along with the session, default is false
// (Requires restart)
// Options:
//   - true
//   - false (default)
// 
// serialize_pane_viewport false
 
// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
// (Requires restart)
//
// scrollback_lines_to_serialize 10000
 
// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
// 
// styled_underlines false
 
// How often in seconds sessions are serialized
// 
// serialization_interval 10000
 
// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
// 
// disable_session_metadata true
 
// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
// 
support_kitty_keyboard_protocol false

// Whether to stack panes when resizing beyond a certain size
// Default: true
//
// stacked_resize false

// Whether to enable mouse hover effects and pane grouping functionality
// Default: true
//
// advanced_mouse_actions false

// Whether to show release notes on first version run
// Default: true
//
// show_release_notes false

// Whether to show startup tips on session start
// Default: true
//
// show_startup_tips false

// A command to run (will be wrapped with sh -c and provided the RESURRECT_COMMAND env variable)
// after Zellij attempts to discover a command inside a pane when resurrecting sessions, the STDOUT
// of this command will be used instead of the discovered RESURRECT_COMMAND
// can be useful for removing wrappers around commands
// Note: be sure to escape backslashes and similar characters properly
//
// post_command_discovery_hook "echo $RESURRECT_COMMAND | sed <your_regex_here>"

// Whether to make sure a local web server is running when a new Zellij session starts.
// This web server will allow creating new sessions and attaching to existing ones that have
// opted in to being shared in the browser.
// When enabled, navigate to http://127.0.0.1:8082
// (Requires restart)
// 
// Note: a local web server can still be manually started from within a Zellij session or from the CLI.
// If this is not desired, one can use a version of Zellij compiled without
// `web_server_capability`
// 
// Possible values:
// - true
// - false
// Default: false
//
// web_server true

// Whether to allow sessions started in the terminal to be shared through a local web server, assuming one is
// running (see the `web_server` option for more details).
// (Requires restart)
// 
// Note: This is an administrative separation and not intended as a security measure.
// 
// Possible values:
// - "on" (allow web sharing through the local web server if it
// is online)
// - "off" (do not allow web sharing unless sessions explicitly opt-in to it)
// - "disabled" (do not allow web sharing and do not permit sessions started in the terminal to opt-in to it)
// Default: "off"
// 
// web_sharing "on"

// The ip address the web server should listen on when it starts
// Default: "127.0.0.1"
// (Requires restart)
//
// web_server_ip "127.0.0.1"

// A path to a certificate file to be used when setting up the web client to serve the
// connection over HTTPs
//
// web_server_cert "/path/to/my/cert.pem"

// A path to a key file to be used when setting up the web client to serve the
// connection over HTTPs
//
// web_server_key "/path/to/my/key.pem"

// Whether to enforce https connections to the web server when it is bound to localhost
// (127.0.0.0/8)
//
// Note: https is ALWAYS enforced when bound to non-local interfaces
//
// Default: false
//
// enforce_https_for_localhost true

// The port the web server should listen on when it starts
// Default: 8082
// (Requires restart)
//
// web_server_port 8082

web_client {
    font "monospace"
}

