# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# on-focused-monitor-changed = 'exec-and-forget aerospace move-mouse window-lazy-center || aerospace move-mouse monitor-lazy-center'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical =   0
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-ctrl-period = 'layout horizontal vertical'
cmd-ctrl-comma = 'layout tiles accordion'
# Toggle between floating and tiling layout, apply to the window in focus
cmd-ctrl-f = 'layout floating tiling'
cmd-ctrl-m = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-ctrl-h = 'focus left --boundaries all-monitors-outer-frame'
cmd-ctrl-j = 'focus down --boundaries all-monitors-outer-frame'
cmd-ctrl-k = 'focus up --boundaries all-monitors-outer-frame'
cmd-ctrl-l = 'focus right --boundaries all-monitors-outer-frame'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-alt-h = 'move left'
cmd-alt-j = 'move down'
cmd-alt-k = 'move up'
cmd-alt-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
cmd-ctrl-minus = 'resize smart -50'
cmd-ctrl-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-1 = 'workspace 1'
ctrl-2 = 'workspace 2'
ctrl-3 = 'workspace 3'
ctrl-4 = 'workspace 4'
ctrl-5 = 'workspace 5'
ctrl-6 = 'workspace 6'
ctrl-7 = 'workspace 7'
ctrl-8 = 'workspace 8'
ctrl-9 = 'workspace 9'
ctrl-0 = 'workspace 10'

cmd-ctrl-shift-h = 'join-with left'
cmd-ctrl-shift-j = 'join-with down'
cmd-ctrl-shift-k = 'join-with up'
cmd-ctrl-shift-l = 'join-with right'


# Move node to workspace and focus follows
cmd-ctrl-1 = ['move-node-to-workspace 1', 'workspace 1']
cmd-ctrl-2 = ['move-node-to-workspace 2', 'workspace 2']
cmd-ctrl-3 = ['move-node-to-workspace 3', 'workspace 3']
cmd-ctrl-4 = ['move-node-to-workspace 4', 'workspace 4']
cmd-ctrl-5 = ['move-node-to-workspace 5', 'workspace 5']
cmd-ctrl-6 = ['move-node-to-workspace 6', 'workspace 6']
cmd-ctrl-7 = ['move-node-to-workspace 7', 'workspace 7']
cmd-ctrl-8 = ['move-node-to-workspace 8', 'workspace 8']
cmd-ctrl-9 = ['move-node-to-workspace 9', 'workspace 9']
cmd-ctrl-0 = ['move-node-to-workspace 10', 'workspace 10']

# Go to next/previous workspace in focused monitor
cmd-ctrl-rightSquareBracket = 'workspace --wrap-around next'
cmd-ctrl-leftSquareBracket = 'workspace --wrap-around prev'

# Move node to the next/prev workspace in focused monitor, follow focus
cmd-ctrl-shift-rightSquareBracket = ['move-node-to-workspace --wrap-around next', 'workspace --wrap-around next']
cmd-ctrl-shift-leftSquareBracket = ['move-node-to-workspace --wrap-around prev', 'workspace --wrap-around prev']

# Go to next/previous non-empty workspace in the focused monitor
# cmd-ctrl-n = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace next --wrap-around'

# Make all windows in current workspace tiled. This is very slow but currently not possible through single command
cmd-ctrl-slash = '''exec-and-forget
ids=$(aerospace list-windows --workspace focused --format %{window-id});
for id in $ids; do
    aerospace focus --window-id $id;
    aerospace layout tiling;
done
'''

# Move node to the next empty workspace in the focused monitor
# TODO: looks like follow focus is sequential, so you see a split second of the old screen. 
# So disabling follow focus for now (hoesnetly not even sure if I want it)
cmd-ctrl-n = '''exec-and-forget
id=$(aerospace list-workspaces --monitor focused --empty);
id=$(echo $id | awk '{print $1}');
aerospace move-node-to-workspace $id
'''

# Aerospace assigns all secondary monitors to an initial workspace that's not reached by key (like 10, 11, etc.) by design.
# We can still focus on windows in secondary monitors by cmd-ctrl-hjkl, but to move nodes to those workspaces, we cannot use cmd-ctrl-num 
# A way to work around this is to preserve the last two windows for secondary monitors and foce assign them. So far I don't know if I need this.

# Move node to monitor and focus follows
cmd-ctrl-backslash = ['move-node-to-monitor --wrap-around next', 'focus-monitor --wrap-around next']
# Since by default all workspaces are tied to the main monitor, we will have to move a workspace into a secondary monitor, otherwise only one will be available
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
cmd-ctrl-shift-backslash = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# Typically switching workspace should be enough, since I use cmd-ctrl-hjkl to switch window focus
# alt-tab = 'exec-and-forget aerospace focus-back-and-forth || aerospace workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-ctrl-semicolon = 'mode service'

[workspace-to-monitor-force-assignment]
10 = 'secondary'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout


[[on-window-detected]]
# Make all windows float by default
check-further-callbacks = true
run = 'layout floating'
